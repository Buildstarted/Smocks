//// The MIT License (MIT)
//// 
//// Copyright (c) 2015 Tom van der Kleij
//// 
//// Permission is hereby granted, free of charge, to any person obtaining a copy of
//// this software and associated documentation files (the "Software"), to deal in
//// the Software without restriction, including without limitation the rights to
//// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
//// the Software, and to permit persons to whom the Software is furnished to do so,
//// subject to the following conditions:
//// 
//// The above copyright notice and this permission notice shall be included in all
//// copies or substantial portions of the Software.
//// 
//// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
//// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
//// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
//// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
//// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
using System;
using System.Diagnostics.CodeAnalysis;
<#
List<string> serializableTypes = new List<string>
{
    "byte",
    "sbyte",
    "ushort",
    "short",
    "uint",
    "int",
    "ulong",
    "long",
    "Guid",
    "Uri",
    "float",
    "double",
    "bool",
    "decimal",
    "char"
};
#>

namespace Smocks
{
    /// <summary>
    /// This is the entry point for users of the library. Users can use
    /// the Run method to start a Smocks session.
    /// </summary>
    [SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1508:ClosingCurlyBracketsMustNotBePrecededByBlankLine", Justification = "Generated.")]
    public partial class Smock
    {
<#
    foreach (string serializableType in serializableTypes)
    {
#>
        /// <summary>
        /// Runs the specified function as a Smocks session.
        /// </summary>
        /// <param name="func">The function.</param>
        /// <returns>The result of the function.</returns>
        public static <#= serializableType#> Run(Func<ISmocksContext, <#= serializableType#>> func)
        {
            return RunInternal(func, new Configuration());
        }

        /// <summary>
        /// Runs the specified function as a Smocks session.
        /// </summary>
        /// <param name="configuration">The configuration.</param>
        /// <param name="func">The function.</param>
        /// <returns>The result of the function.</returns>
        public static <#= serializableType#> Run(Configuration configuration, Func<ISmocksContext, <#= serializableType#>> func)
        {
            return RunInternal(func, configuration);
        }

<#
    } 
#>
    }
}
